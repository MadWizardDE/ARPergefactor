# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release

on:
  push:
    tags:
      - 'v*'

env:
  name: 'ARPergefactor'
  net: '9.0'


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ linux-arm64, linux-x64, win-x64 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '${{ env.net }}.x'
          
      - name: Publish (${{ matrix.os }})
        run: |
          RID=${{ matrix.os }}
          dotnet publish -c Release -r $RID --self-contained false \
            -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true \
            -p:PublishTrimmed=false \
            -f net${{ env.net }}

      - name: Archive binary
        run: |
          cd bin/Release/net${{ env.net }}/${{ matrix.os }}/publish
          zip ../../../../../${{ matrix.os }}.zip ./*

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: ./${{ matrix.os }}.zip

  build-portable:
    name: Build (portable)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '${{ env.net }}.x'
          
      - name: Publish (portable)
        run: |
          dotnet publish -c Release --self-contained false \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -p:PublishTrimmed=false \
            -f net${{ env.net }}

      - name: Archive binary
        run: |
          cd bin/Release/net${{ env.net }}/publish
          zip ../../../../portable.zip ./* -x "${{ env.name }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-portable
          path: ./portable.zip


  release:
    name: Create Release
    needs: [ build, build-portable ]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: artifacts/**/**/*.zip
